.LOLMain-Container{
    height: 100%;
    width: 50%;
    display: flex; /* or inline-flex */
    flex-direction: column;
    flex-wrap: nowrap;
    align-content: center;
}

.settings, .subtitle{
    padding: 6px;
}

.alignLeft{
    text-align: left;
}

.item {
    flex: 1;
}


.container {
    display: flex;
    height: 70%; /* Or whatever */
    width: 60%;
    /*text-align: center;*/
    /*justify-content: center;*/
    background-color: #731616;
    border: 5px solid #4B0101;
    flex-direction: column;
    justify-content: center;
    /*flex-wrap: wrap;*/
    margin: 0px auto;

    overflow:auto;
}

@media only screen and (max-width: 992px) {
    .container {
        width: 100%;
    }
    .App-logo{
        width: 80%;
        height: 80%;
    }
}


.Main-Container {
    /* We first create a flex layout context */
    display: flex;

    /* Then we define the flow direction
       and if we allow the items to wrap
     * Remember this is the same as:
     * flex-direction: row;
     * flex-wrap: wrap;
     */
    flex-flow: column wrap;

    /* Then we define how is distributed the remaining space */
    justify-content: space-around;
}

ul  {
    padding: 0;
    margin: 0;
}

/* Style the list items */
ul li {
    cursor: pointer;
    position: relative;
    padding: 12px 0px 12px 0px;
    list-style-type: none;
    background: #9A3333;
    font-size: 18px;
    transition: 0.2s;
    text-align: left;
    padding-left: 50px;
    padding-right: 50px;
    /* make the list items unselectable */
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/* Set all odd list items to a different color (zebra-stripes) */
ul li:nth-child(odd) {
    background: #BA5656;
}

/* Darker background-color on hover */
ul li:hover {
    background: #E69090;
}

/* When clicked on, add a background color and strike out text */
ul li.checked{
    background: #4B0101;
    text-decoration: line-through;
}

/* Style the close button */
.close {
    position: absolute;
    right: 0;
    top: 0;
    padding: 12px 16px 12px 16px;
}

.close:hover {
    background-color: #4B0101;
}

/* Style the input */
.child, .New-Task input {
    border: none;
    width: calc(70% - 20px);
    padding: 10px;
    float: left;
    font-size: 16px;
}

.child, .New-Task input:focus, button:focus{
    outline: none;
}

.New-Task input{
    background-color: #E69090;
    color: white;
}

.New-Task input::placeholder {
    color: white;
}

ul li input{
    background-color: transparent;
    border: transparent;
    width: 100%;
    outline: none;
}

/* Style the "Add" button */
.addBtn {
    padding: 10px;
    width: 30%;
    background: #BA5656;
    float: left;
    text-align: center;
    font-size: 16px;
    cursor: pointer;
    transition: 0.3s;
    border: 0;
    color: white;
}

.addBtn:hover {
    background-color: #4B0101;
}

.delete{
    position: absolute;
    right: 0;
    top: 0;
    padding: 12px 16px 12px 16px;
}

.delete:hover {
    background-color: #4B0101;
    color: white;
}

.check{
    position: absolute;
    left: 0;
    top: 0;
    padding: 12px 16px 12px 16px;
}

.check:hover {
    background-color: #4B0101;
    color: white;
}