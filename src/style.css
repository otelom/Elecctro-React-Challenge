.LOLMain-Container{
    height: 100%;
    width: 50%;
    display: flex; /* or inline-flex */
    flex-direction: column;
    flex-wrap: nowrap;
    align-content: center;
}

.alignLeft{
    text-align: left;
}

.item {
    flex: 1;
}

.container {
    display: flex;
    height: 80%; /* Or whatever */
    width: 50%;
    /*text-align: center;*/
    /*justify-content: center;*/
    background-color: aqua;
    border: 5px solid red;
    flex-direction: column;
    justify-content: center;
    /*flex-wrap: wrap;*/
    margin:0px auto;
}



.Main-Container {
    /* We first create a flex layout context */
    display: flex;

    /* Then we define the flow direction
       and if we allow the items to wrap
     * Remember this is the same as:
     * flex-direction: row;
     * flex-wrap: wrap;
     */
    flex-flow: column wrap;

    /* Then we define how is distributed the remaining space */
    justify-content: space-around;
}

ul  {
    padding: 0;
    margin: 0;
}

/* Style the list items */
ul li {
    cursor: pointer;
    position: relative;
    padding: 12px 0px 12px 0px;
    list-style-type: none;
    background: #eee;
    font-size: 18px;
    transition: 0.2s;

    /* make the list items unselectable */
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/* Set all odd list items to a different color (zebra-stripes) */
ul li:nth-child(odd) {
    background: #f9f9f9;
}

/* Darker background-color on hover */
ul li:hover {
    background: #ddd;
}

/* When clicked on, add a background color and strike out text */
ul li.checked .text {
    background: #888;
    color: #fff;
    text-decoration: line-through;
}

ul li.checked {
    background: #888;
    color: #fff;
}

/* Add a "checked" mark when clicked on */
/*ul li.checked::before {
    content: '';
    position: absolute;
    border-color: #fff;
    border-style: solid;
    border-width: 0 2px 2px 0;
    top: 10px;
    left: 16px;
    transform: rotate(45deg);
    height: 15px;
    width: 7px;
}*/

/* Style the close button */
.close {
    position: absolute;
    right: 0;
    top: 0;
    padding: 12px 16px 12px 16px;
}

.close:hover {
    background-color: #f44336;
    color: white;
}

/* Style the input */
.child, .New-Task input {
    border: none;
    width: calc(70% - 10px);
    padding: 10px;
    padding-left: 10px;
    float: left;
    font-size: 16px;
}

.child, .New-Task input:focus{
    outline: none;
}

/* Style the "Add" button */
.addBtn {
    padding: 10px;
    width: calc(30% - 10px);
    background: #d9d9d9;
    color: #555;
    float: left;
    text-align: center;
    font-size: 16px;
    cursor: pointer;
    transition: 0.3s;
    border: 0;
}

.addBtn:hover {
    background-color: #bbb;
}

.delete{
    position: absolute;
    right: 0;
    top: 0;
    padding: 12px 16px 12px 16px;
}

.delete:hover {
    background-color: #f44336;
    color: white;
}


.check{
    position: absolute;
    left: 0;
    top: 0;
    padding: 12px 16px 12px 16px;
}

.check:hover {
    background-color: #f44336;
    color: white;
}